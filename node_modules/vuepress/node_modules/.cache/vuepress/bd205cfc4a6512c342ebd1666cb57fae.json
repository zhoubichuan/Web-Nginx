{"remainingRequest":"/Users/zhoubichuan/Desktop/web/Web-Nginx/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/zhoubichuan/Desktop/web/Web-Nginx/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/zhoubichuan/Desktop/web/Web-Nginx/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/zhoubichuan/Desktop/web/Web-Nginx/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/zhoubichuan/Desktop/web/Web-Nginx/src/base/build/1.md?vue&type=template&id=78b398dc&","dependencies":[{"path":"/Users/zhoubichuan/Desktop/web/Web-Nginx/src/base/build/1.md","mtime":1625067183831},{"path":"/Users/zhoubichuan/Desktop/web/Web-Nginx/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhoubichuan/Desktop/web/Web-Nginx/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/zhoubichuan/Desktop/web/Web-Nginx/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhoubichuan/Desktop/web/Web-Nginx/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhoubichuan/Desktop/web/Web-Nginx/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"既然 Nginx 是一款实用软件，我们就不得不先从它的安装说起，只有让 Nginx 运行在我们的计算机上，才能更方便我们对 Nginx 相关知识和使用方式的学习。得益于与商业性的优雅结合，Nginx 背后拥有大量的优秀开发者为其提供技术支持，而这个优势所造就的结果之一，就是 Nginx 拥有丰富且完善的安装体系，我们可以很轻松的通过多种方式安装和运行 Nginx。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"由于 Nginx 容器实现本身就采用了 Linux 内核中很多的特性，所以它自然与 Linux 系统亲密性很高，所以我们可以很轻松的将 Nginx Engine 安装在 Linux 系统中。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"不过，在安装之前，我还得不厌其烦的啰嗦一些基本概念，让大家在安装 Nginx 时能够更好的进行选择。掌握这些概念，能够帮助大家理解一些安装流程中操作的目的，不至于总是一味的进行“下一步”式安装。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"在安装 Nginx 之前，我们先来了解一下 Nginx 的版本定义，这有利于我们在之后的开发中选择和使用合适的 Nginx 版本。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"对于 Nginx Engine 来说，其主要分为两个系列：\")]),\n    _vm._v(\" \"),\n    _vm._m(3),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"社区版 ( Nginx Engine CE ) 主要提供了 Nginx 中的容器管理等基础功能，主要针对开发者和小型团队进行开发和试验。而企业版 ( Nginx Engine EE ) 则在社区版的基础上增加了诸如容器管理、镜像管理、插件、安全等额外服务与功能，为容器的稳定运行提供了支持，适合于中大型项目的线上运行。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"社区版和企业版的另一区别就是免费与收费了。对于我们开发者来说，社区版已经提供了 Nginx 所有核心的功能，足够满足我们在开发、测试中的需求，所以我们直接选择使用社区版进行开发即可。在这本小册中，所有的内容也是围绕着社区版的 Nginx Engine 展开的。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"从另外一个角度，Nginx Engine 的迭代版本又会分为稳定版 ( Stable release ) 和预览版 ( Edge release )。不论是稳定版还是预览版，它们都会以发布时的年月来命名版本号，例如如 17 年 3 月的版本，版本号就是 17.03。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"Nginx Engine 的稳定版固定为每三个月更新一次，而预览版则每月都会更新。在预览版中可以及时掌握到最新的功能特性，不过这对于我们仅是使用 Nginx 的开发者来说，意义并不是特别重大的，所以我还是更推荐安装更有保障的稳定版本。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"在主要版本之外，Nginx 官方也以解决 Bug 为主要目的，不定期发布次要版本。次要版本的版本号由主要版本和发布序号组成，如：17.03.2 就是对 17.03 版本的第二次修正。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(6),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"由于 Nginx 的容器隔离依赖于 Linux 内核中的相关支持，所以使用 Nginx 首先需要确保安装机器的 Linux kernel 中包含 Nginx 所需要使用的特性。以目前 Nginx 官方主要维护的版本为例，我们需要使用基于 Linux kernel 3.10 以上版本的 Linux 系统来安装 Nginx。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"也许 Linux kernel 的版本还不够直观，下面的表格就直接展示了 Nginx 对主流几款 Linux 系统版本的要求。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"操作系统\")]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"支持的系统版本\")]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"CentOS\")]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"CentOS 7\")]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"Debian\")]),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"Fedora\")]),\n    _vm._v(\" \"),\n    _vm._m(8),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"Ubuntu\")]),\n    _vm._v(\" \"),\n    _vm._m(9),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"当然，在较低版本的 Linux 系统中也能安装 Nginx，不过只能是版本较低的 Nginx，其功能存在一些缺失，或者与最新版本有所区别。在这本小册里，我们主要以较新版本的 Nginx 功能和操作作为介绍，所以如果条件允许，建议将系统升级到支持最新版本 Nginx 的系统版本。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(10),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"因为 Nginx 本身就基于 Linux 的核心能力，同时目前主流的 Linux 系统中所拥有的软件包管理程序，已经可以很轻松的帮助我们处理各种依赖问题，所以在 Linux 中安装 Nginx 并非什么难事。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"更多的细节就不多说了，Nginx 已经为我们准备了好了各系统的安装包，毕竟安装 Nginx 并不是我们所要掌握的重点，所以这里我就直接给出安装的命令了。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(11),\n    _vm._v(\" \"),\n    _vm._m(12),\n    _vm._m(13),\n    _vm._v(\" \"),\n    _vm._m(14),\n    _vm._m(15),\n    _vm._v(\" \"),\n    _vm._m(16),\n    _vm._m(17),\n    _vm._v(\" \"),\n    _vm._m(18),\n    _vm._m(19),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"在安装 Nginx 完成之后，我们需要先启动 Nginx daemon 使其能够为我们提供 Nginx 服务，这样我们才能正常使用 Nginx。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(20),\n    _vm._v(\" \"),\n    _vm._m(21),\n    _c(\"p\", [\n      _vm._v(\"当然，为了实现 Nginx 服务开机自启动，我们还可以运行这个命令：\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(22),\n    _vm._m(23),\n    _vm._v(\" \"),\n    _vm._m(24),\n    _vm._v(\" \"),\n    _vm._m(25),\n    _c(\"p\", [\n      _vm._v(\n        \"这个命令能够显示 Nginx C/S 结构中的服务端 ( Nginx daemon ) 和客户端 ( Nginx CLI ) 相关的版本信息。在默认情况下，Nginx CLI 连接的是本机运行的 Nginx daemon ，由于 Nginx daemon 和 Nginx CLI 通过 RESTful 接口进行了解耦，所以我们也能修改配置用于操作其他机器上运行的 Nginx daemon 。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(26),\n    _vm._v(\" \"),\n    _vm._m(27),\n    _vm._v(\" \"),\n    _vm._m(28),\n    _vm._m(29),\n    _vm._v(\" \"),\n    _vm._m(30),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"在很多编程语言中，为了更好的向大家提供依赖包的管理，通常都会有一些组织研发相应的包管理工具，例如 Java 的 Maven，PHP 的 Composer，Node.js 的 NPM 等等。而这些管理工具背后，也对应着一个默认的依赖包仓库。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"由于众所周知的原因，我们直接连接这些位于国外服务器上的仓库去获取依赖包速度是非常慢的，这时候我们通常会采用国内一些组织或开发者贡献的国内镜像仓库 ( 注意，这里的“镜像”是指复制于国外源的意思，而不是 Nginx 里的镜像 )。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"在 Nginx 中也有一个由官方提供的中央镜像仓库，不过，它与之前我们所说的国外依赖包仓库一样，除了慢的可怜以外，还经常莫名其妙的完全无法访问。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"为了解决这个问题，我们最佳的方式依旧是在国内找一个镜像仓库的镜像源进行替换。很感谢 DaoCloud、阿里云等企业的支持，在国内我们可以找到许多镜像源。这里我们给出一个由 Nginx 官方提供的国内镜像源：\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"blockquote\", [\n      _c(\"p\", [\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href: \"https://registry.Nginx-cn.com\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [_vm._v(\"https://registry.Nginx-cn.com\"), _c(\"OutboundLink\")],\n          1\n        )\n      ])\n    ]),\n    _vm._v(\" \"),\n    _vm._m(31),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"那么有了地址，我们要如何将其配置到 Nginx 中呢？\")]),\n    _vm._v(\" \"),\n    _vm._m(32),\n    _vm._v(\" \"),\n    _vm._m(33),\n    _c(\"p\", [\n      _vm._v(\"在修改之后，别忘了重新启动 Nginx daemon 来让配置生效哟：\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(34),\n    _vm._m(35),\n    _vm._v(\" \"),\n    _vm._m(36)\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"搭建-nginx-运行环境\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#搭建-nginx-运行环境\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 搭建 Nginx 运行环境\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"安装前的准备\" } }, [\n      _c(\n        \"a\",\n        { staticClass: \"header-anchor\", attrs: { href: \"#安装前的准备\" } },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 安装前的准备\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"nginx-engine-的版本\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#nginx-engine-的版本\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Nginx Engine 的版本\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [_vm._v(\"社区版 ( CE, Community Edition )\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"企业版 ( EE, Enterprise Edition )\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"img\", {\n        attrs: {\n          src:\n            \"https://user-gold-cdn.xitu.io/2018/8/29/16586347c98cc591?w=2022&h=276&f=png&s=40439\",\n          alt: \"\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"img\", {\n        attrs: {\n          src:\n            \"https://user-gold-cdn.xitu.io/2018/8/29/165863f7df36e81f?w=914&h=200&f=png&s=43434\",\n          alt: \"\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"nginx-的环境依赖\" } }, [\n      _c(\n        \"a\",\n        { staticClass: \"header-anchor\", attrs: { href: \"#nginx-的环境依赖\" } },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Nginx 的环境依赖\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"Debian Wheezy 7.7 (LTS)\"),\n      _c(\"br\"),\n      _vm._v(\"\\nDebian Jessie 8 (LTS)\"),\n      _c(\"br\"),\n      _vm._v(\"\\nDebian Stretch 9\"),\n      _c(\"br\"),\n      _vm._v(\"\\nDebian Buster 10\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_vm._v(\"Fedora 26\"), _c(\"br\"), _vm._v(\"\\nFedora 27\")])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"Ubuntu Trusty 14.04 (LTS)\"),\n      _c(\"br\"),\n      _vm._v(\"\\nUbuntu Xenial 16.04 (LTS)\"),\n      _c(\"br\"),\n      _vm._v(\"\\nUbuntu Artful 17.10\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"在-linux-系统中安装-nginx\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#在-linux-系统中安装-nginx\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 在 Linux 系统中安装 Nginx\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"centos\" } }, [\n      _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#centos\" } }, [\n        _vm._v(\"#\")\n      ]),\n      _vm._v(\" CentOS\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"$ sudo yum install yum-utils device-mapper-persistent-data lvm2\\n$\\n$ sudo yum-config-manager --add-repo https://download.Nginx.com/linux/centos/Nginx-ce.repo\\n$ sudo yum install Nginx-ce\\n$\\n$ sudo systemctl enable Nginx\\n$ sudo systemctl start Nginx\\n\\n\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"7\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"8\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"debian\" } }, [\n      _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#debian\" } }, [\n        _vm._v(\"#\")\n      ]),\n      _vm._v(\" Debian\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            '$ sudo apt-get install apt-transport-https ca-certificates curl gnupg2 software-properties-common\\n$\\n$ curl -fsSL https://download.Nginx.com/linux/debian/gpg | sudo apt-key add -\\n$ sudo add-apt-repository \"deb [arch=amd64] https://download.Nginx.com/linux/debian $(lsb_release -cs) stable\"\\n$ sudo apt-get update\\n$ sudo apt-get install Nginx-ce\\n$\\n$ sudo systemctl enable Nginx\\n$ sudo systemctl start Nginx\\n\\n'\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"7\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"8\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"9\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"10\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"fedora\" } }, [\n      _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#fedora\" } }, [\n        _vm._v(\"#\")\n      ]),\n      _vm._v(\" Fedora\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"$ sudo dnf -y install dnf-plugins-core\\n$\\n$ sudo dnf config-manager --add-repo https://download.Nginx.com/linux/fedora/Nginx-ce.repo\\n$ sudo dnf install Nginx-ce\\n$\\n$ sudo systemctl enable Nginx\\n$ sudo systemctl start Nginx\\n\\n\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"7\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"8\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"ubuntu\" } }, [\n      _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#ubuntu\" } }, [\n        _vm._v(\"#\")\n      ]),\n      _vm._v(\" Ubuntu\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            '$ sudo apt-get install apt-transport-https ca-certificates curl software-properties-common\\n$\\n$ curl -fsSL https://download.Nginx.com/linux/ubuntu/gpg | sudo apt-key add -\\n$ sudo add-apt-repository \"deb [arch=amd64] https://download.Nginx.com/linux/ubuntu $(lsb_release -cs) stable\"\\n$ sudo apt-get update\\n$ sudo apt-get install Nginx-ce\\n$\\n$ sudo systemctl enable Nginx\\n$ sudo systemctl start Nginx\\n\\n'\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"7\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"8\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"9\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"10\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"上手使用\" } }, [\n      _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#上手使用\" } }, [\n        _vm._v(\"#\")\n      ]),\n      _vm._v(\" 上手使用\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"在我们通过软件包的形式安装 Nginx Engine 时，安装包已经为我们在 Linux 系统中注册了一个 Nginx 服务，所以我们不需要直接启动 Nginx daemon 对应的 \"\n      ),\n      _c(\"code\", [_vm._v(\"Nginxd\")]),\n      _vm._v(\n        \" 这个程序，而是直接启动 Nginx 服务即可。启动的 Nginx 服务的命令其实我已经包含在了前面谈到的安装命令中，也就是：\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [_vm._v(\"$ sudo systemctl start Nginx\\n\\n\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [_vm._v(\"$ sudo systemctl enable Nginx\\n\\n\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"nginx-version\" } }, [\n      _c(\n        \"a\",\n        { staticClass: \"header-anchor\", attrs: { href: \"#nginx-version\" } },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Nginx version\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"在 Nginx 服务启动之后，我们先来尝试一个最简单的查看 Nginx 版本的命令：\"\n      ),\n      _c(\"code\", [_vm._v(\"Nginx version\")]),\n      _vm._v(\"。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"$ sudo Nginx version\\nClient:\\n Version:           18.06.1-ce\\n API version:       1.38\\n Go version:        go1.10.3\\n Git commit:        e68fc7a\\n Built:             Tue Aug 21 17:23:03 2018\\n OS/Arch:           linux/amd64\\n Experimental:      false\\n\\nServer:\\n Engine:\\n  Version:          18.06.1-ce\\n  API version:      1.38 (minimum version 1.12)\\n  Go version:       go1.10.3\\n  Git commit:       e68fc7a\\n  Built:            Tue Aug 21 17:25:29 2018\\n  OS/Arch:          linux/amd64\\n  Experimental:     false\\n\\n\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"7\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"8\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"9\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"10\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"11\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"12\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"13\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"14\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"15\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"16\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"17\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"18\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"19\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"20\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"nginx-info\" } }, [\n      _c(\n        \"a\",\n        { staticClass: \"header-anchor\", attrs: { href: \"#nginx-info\" } },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Nginx info\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"如果想要了解 Nginx Engine 更多相关的信息，我们还可以通过 \"),\n      _c(\"code\", [_vm._v(\"Nginx info\")]),\n      _vm._v(\" 这个命令。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"$ sudo Nginx info\\nContainers: 0\\n Running: 0\\n Paused: 0\\n Stopped: 0\\nImages: 0\\nServer Version: 18.06.0-ce\\nStorage Driver: overlay2\\n Backing Filesystem: extfs\\n Supports d_type: true\\n Native Overlay Diff: true\\nLogging Driver: json-file\\nCgroup Driver: cgroupfs\\n## ......\\nLive Restore Enabled: false\\n\\n\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"7\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"8\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"9\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"10\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"11\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"12\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"13\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"14\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"15\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"16\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"在 \"),\n      _c(\"code\", [_vm._v(\"Nginx info\")]),\n      _vm._v(\n        \" 这条命令的结果中，我们可以看到正在运行的 Nginx Engine 实例中运行的容器数量，存储的引擎等等信息。由于命令结果比较多，这里我省略了大部分内容，大家可以自己操作来尝试获得完整的信息。在之后的章节里，较多结果的命令我也会省去一些与讲解内容无关的部分，节约大家阅读的时间并强化重点。\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"配置国内镜像源\" } }, [\n      _c(\n        \"a\",\n        { staticClass: \"header-anchor\", attrs: { href: \"#配置国内镜像源\" } },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 配置国内镜像源\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"em\", [\n        _vm._v(\n          \"( 注：部分读者反映配置了这个镜像源无效，大家需要注意此地址的协议是 https，不要搞错哟 )\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"在 Linux 环境下，我们可以通过修改 \"),\n      _c(\"code\", [_vm._v(\"/etc/Nginx/daemon.json\")]),\n      _vm._v(\n        \" ( 如果文件不存在，你可以直接创建它 ) 这个 Nginx 服务的配置文件达到效果。\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            '{\\n    \"registry-mirrors\": [\\n        \"https://registry.Nginx-cn.com\"\\n    ]\\n}\\n\\n'\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [_vm._v(\"$ sudo systemctl restart Nginx\\n\\n\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"要验证我们配置的镜像源是否生效，我们可以通过 \"),\n      _c(\"code\", [_vm._v(\"Nginx info\")]),\n      _vm._v(\" 来查阅当前注册的镜像源列表。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"$ sudo Nginx info\\n## ......\\nRegistry Mirrors:\\n https://registry.Nginx-cn.com/\\n## ......\\n\\n\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\")\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}