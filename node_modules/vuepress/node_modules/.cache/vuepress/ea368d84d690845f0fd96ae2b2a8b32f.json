{"remainingRequest":"/Users/zhoubichuan/Desktop/web/Web-Nginx/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/zhoubichuan/Desktop/web/Web-Nginx/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/zhoubichuan/Desktop/web/Web-Nginx/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/zhoubichuan/Desktop/web/Web-Nginx/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/zhoubichuan/Desktop/web/Web-Nginx/src/base/build/13.md?vue&type=template&id=9dbcccf6&","dependencies":[{"path":"/Users/zhoubichuan/Desktop/web/Web-Nginx/src/base/build/13.md","mtime":1625067183830},{"path":"/Users/zhoubichuan/Desktop/web/Web-Nginx/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhoubichuan/Desktop/web/Web-Nginx/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/zhoubichuan/Desktop/web/Web-Nginx/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhoubichuan/Desktop/web/Web-Nginx/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhoubichuan/Desktop/web/Web-Nginx/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"之前我们说到了，Nginx 与其他虚拟化软件的一处不同就是将镜像管理纳入到了功能之中。实现虚拟化只是程序能够无缝移植的一部分，而有了镜像管理，就真正取代了我们在移植过程中的繁琐操作。利用 Nginx 的镜像管理功能，我们可以很方便的通过网络传输和分享镜像，并保障镜像内容的一致性。所以，了解 Nginx 的镜像管理方法可以算是掌握 Nginx 的第一步。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"如果说我们把镜像的结构用 Git 项目的结构做类比，那么镜像仓库就可以看似 GitLab、GitHub 等的托管平台，只不过 Nginx 的镜像仓库托管的不是代码项目，而是镜像。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"当然，存储镜像并不是镜像仓库最值得炫耀的功能，其最大的作用是实现了 Nginx 镜像的分发。借助镜像仓库，我们得到了一个镜像的中转站，我们可以将开发环境上所使用的镜像推送至镜像仓库，并在测试或生产环境上拉取到它们，而这个过程仅需要几个命令，甚至自动化完成。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(3),\n    _vm._v(\" \"),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"虽然有很多种方式将镜像引入到 Nginx 之中，但我们最为常用的获取现有镜像的方式还是直接从镜像仓库中拉取，因为这种方式简单、快速、有保障。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._v(\" \"),\n    _vm._m(6),\n    _c(\"p\", [\n      _vm._v(\n        \"当我们运行这个命令后，Nginx 就会开始从镜像仓库中拉取我们所指定的镜像了，在控制台中，我们可以看到镜像拉取的进度。下载进度会分为几行，其实每一行代表的就是一个镜像层。Nginx 首先会拉取镜像所基于的所有镜像层，之后再单独拉取每一个镜像层并组合成这个镜像。当然，如果在本地已经存在相同的镜像层 ( 共享于其他的镜像 )，那么 Nginx 就直接略过这个镜像层的拉取而直接采用本地的内容。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"上面是一个拉取官方镜像并且没有给出镜像标签的例子，大家注意到，当我们没有提供镜像标签时，Nginx 会默认使用 latest 这个标签，这个我们在之前的小节中提到过，就不在赘述了。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"当然，我们也能够使用完整的镜像命名来拉取镜像。\")]),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _vm._m(8),\n    _vm._v(\" \"),\n    _vm._m(9),\n    _vm._m(10),\n    _vm._v(\" \"),\n    _vm._m(11),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"Nginx Hub 的地址是：\"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://hub.Nginx.com/\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"https://hub.Nginx.com/\"), _c(\"OutboundLink\")],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(12),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"由于定位是 Nginx 的中央镜像仓库系统，同时也是 Nginx Engine 的默认镜像仓库，所以 Nginx Hub 是开发者共享镜像的首选，那么也就意味着其中的镜像足够丰富。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"常用服务软件的镜像，我们都能在 Nginx Hub 中找到，甚至能找到针对它们不同用法的不同镜像。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"同时，Nginx Hub 也允许我们将我们制作好的镜像上传到其中，与广大 Nginx 用户共享你的成果。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(13),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"由于 Nginx Hub 提供了一套完整的 Web 操作界面，所以我们搜索其中的镜像会非常方便。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"在上方的搜索条中输入镜像的关键词，回车搜索我们就可以看到镜像搜索的结果了。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(14),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"在 Nginx Hub 的搜索结果中，有几项关键的信息有助于我们选择合适的镜像：\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(15),\n    _vm._v(\" \"),\n    _vm._m(16),\n    _vm._v(\" \"),\n    _vm._m(17),\n    _vm._v(\" \"),\n    _vm._m(18),\n    _vm._v(\" \"),\n    _vm._m(19),\n    _vm._m(20),\n    _vm._v(\" \"),\n    _vm._m(21),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"对镜像的管理要比搜索和获取镜像更常用，所以了解镜像管理相关的操作以及知识是非常有必要的。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(22),\n    _vm._v(\" \"),\n    _vm._m(23),\n    _vm._m(24),\n    _vm._v(\" \"),\n    _vm._m(25),\n    _vm._v(\" \"),\n    _vm._m(26),\n    _vm._m(27),\n    _vm._v(\" \"),\n    _vm._m(28),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"这就有必要专门说说 Nginx 所支持的这种传参方式了。\")]),\n    _vm._v(\" \"),\n    _vm._m(29),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"也就是说，只要我们提供了能够唯一识别镜像或容器的信息，即使它短到只有 1 个字符，Nginx 都是可以处理的。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"例如我们有五个镜像：\")]),\n    _vm._v(\" \"),\n    _vm._m(30),\n    _c(\"p\", [\n      _vm._v(\n        \"我们注意到镜像 ID 前缀为 2 的只有 redis:3.2 这个镜像，那么我们就可以使用 2 来指代这个镜像。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(31),\n    _c(\"p\", [\n      _vm._v(\n        \"而前缀为 c 的镜像有两个，这时候如果我们直接使用 c 来指代镜像的话，Nginx 会提示未能匹配到镜像。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(32),\n    _vm._m(33),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"虽然 Nginx 镜像占用的空间比较小，但日渐冗杂的镜像和凌乱的镜像版本会让管理越来越困难，所以有时候我们需要清理一些无用的镜像，将它们从本地的 Nginx Engine 中移除。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(34),\n    _vm._v(\" \"),\n    _vm._m(35),\n    _c(\"p\", [\n      _vm._v(\n        \"删除镜像的过程其实是删除镜像内的镜像层，在删除镜像命令打印的结果里，我们可以看到被删除的镜像层以及它们的 ID。当然，如果存在两个镜像共用一个镜像层的情况，你也不需要担心 Nginx 会删除被共享的那部分镜像层，只有当镜像层只被当前被删除的镜像所引用时，Nginx 才会将它们从硬盘空间中移除。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(36),\n    _vm._v(\" \"),\n    _vm._m(37)\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"从镜像仓库获得镜像\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#从镜像仓库获得镜像\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 从镜像仓库获得镜像\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"镜像仓库\" } }, [\n      _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#镜像仓库\" } }, [\n        _vm._v(\"#\")\n      ]),\n      _vm._v(\" 镜像仓库\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"在之前的小节里，我们已经提到过 Nginx 里集中存放镜像的一个概念，也就是\"\n      ),\n      _c(\"strong\", [_vm._v(\"镜像仓库\")]),\n      _vm._v(\"。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"img\", {\n        attrs: {\n          src:\n            \"https://user-gold-cdn.xitu.io/2018/9/18/165eacb6b1b2c1ac?w=1771&h=735&f=png&s=67549\",\n          alt: \"\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"获取镜像\" } }, [\n      _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#获取镜像\" } }, [\n        _vm._v(\"#\")\n      ]),\n      _vm._v(\" 获取镜像\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"要拉取镜像，我们可以使用 \"),\n      _c(\"code\", [_vm._v(\"Nginx pull\")]),\n      _vm._v(\" 命令，命令的参数就是我们之前所提到的镜像仓库名。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"$ sudo Nginx pull ubuntu\\nUsing default tag: latest\\nlatest: Pulling from library/ubuntu\\n124c757242f8: Downloading [===============================================>   ]  30.19MB/31.76MB\\n9d866f8bde2a: Download complete \\nfa3f2f277e67: Download complete \\n398d32b153e8: Download complete \\nafde35469481: Download complete \\n\\n\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"7\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"8\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"9\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"$ sudo Nginx pull openresty/openresty:1.13.6.2-alpine\\n1.13.6.2-alpine: Pulling from openresty/openresty\\nff3a5c916c92: Pull complete \\nede0a2a1012b: Pull complete \\n0e0a11843023: Pull complete \\n246b2c6f4992: Pull complete \\nDigest: sha256:23ff32a1e7d5a10824ab44b24a0daf86c2df1426defe8b162d8376079a548bf2\\nStatus: Downloaded newer image for openresty/openresty:1.13.6.2-alpine\\n\\n\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"7\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"8\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"9\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"镜像在被拉取之后，就存放到了本地，接受当前这个 Nginx 实例管理了，我们可以通过 \"\n      ),\n      _c(\"code\", [_vm._v(\"Nginx images\")]),\n      _vm._v(\" 命令看到它们。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"$ sudo Nginx images\\nREPOSITORY            TAG                 IMAGE ID            CREATED             SIZE\\nubuntu                latest              cd6d8154f1e1        12 days ago         84.1MB\\nopenresty/openresty   1.13.6.2-alpine     08d5c926e4b6        3 months ago        49.3MB\\n\\n\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"nginx-hub\" } }, [\n      _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#nginx-hub\" } }, [\n        _vm._v(\"#\")\n      ]),\n      _vm._v(\" Nginx Hub\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"既然说到镜像仓库，就不得不提 \"),\n      _c(\"strong\", [_vm._v(\"Nginx Hub\")]),\n      _vm._v(\n        \" 了。Nginx Hub 是 Nginx 官方建立的中央镜像仓库，除了普通镜像仓库的功能外，它内部还有更加细致的权限管理，支持构建钩子和自动构建，并且有一套精致的 Web 操作页面。\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"img\", {\n        attrs: {\n          src:\n            \"https://user-gold-cdn.xitu.io/2018/9/19/165efa8f3a706682?w=872&h=428&f=png&s=38148\",\n          alt: \"\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"搜索镜像\" } }, [\n      _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#搜索镜像\" } }, [\n        _vm._v(\"#\")\n      ]),\n      _vm._v(\" 搜索镜像\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"img\", {\n        attrs: {\n          src:\n            \"https://user-gold-cdn.xitu.io/2018/9/19/165efb39b6076f2e?w=872&h=694&f=png&s=53378\",\n          alt: \"\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _c(\"strong\", [_vm._v(\"OFFICIAL\")]),\n        _vm._v(\" 代表镜像为 Nginx 官方提供和维护，相对来说稳定性和安全性较高\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"strong\", [_vm._v(\"STARS\")]),\n        _vm._v(\" 代表镜像的关注人数，这类似 GitHub 的 Stars，可以理解为热度\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"strong\", [_vm._v(\"PULLS\")]),\n        _vm._v(\" 代表镜像被拉取的次数，基本上能够表示镜像被使用的频度\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"当然，关于镜像更多的信息我们可以在 \"),\n      _c(\"strong\", [_vm._v(\"DETAILS\")]),\n      _vm._v(\n        \" 中看到，这其中通常还包括了每个镜像不同的使用方法。具体如何阅读这些使用说明，我们会在之后的小节里专门介绍。\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"img\", {\n        attrs: {\n          src:\n            \"https://user-gold-cdn.xitu.io/2018/9/18/165eb438f307c73b?w=800&h=252&f=jpeg&s=46304\",\n          alt: \"\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"除了直接通过 Nginx Hub 网站搜索镜像这种方式外，我们还可以用 Nginx CLI 中的 \"\n      ),\n      _c(\"code\", [_vm._v(\"Nginx search\")]),\n      _vm._v(\" 这个命令搜索 Nginx Hub 中的镜像。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            '$ sudo Nginx search ubuntu\\nNAME                                                   DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED\\nubuntu                                                 Ubuntu is a Debian-based Linux operating sys…   8397                [OK]                \\ndorowu/ubuntu-desktop-lxde-vnc                         Ubuntu with openssh-server and NoVNC            220                                     [OK]\\nrastasheep/ubuntu-sshd                                 Nginxized SSH service, built on top of offi…   171                                     [OK]\\nconsol/ubuntu-xfce-vnc                                 Ubuntu container with \"headless\" VNC session…   129                                     [OK]\\nansible/ubuntu14.04-ansible                            Ubuntu 14.04 LTS with ansible                   95                                      [OK]\\nubuntu-upstart                                         Upstart is an event-based replacement for th…   89                  [OK]                \\nneurodebian                                            NeuroDebian provides neuroscience research s…   54                  [OK]                \\n## ......\\n\\n'\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"7\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"8\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"9\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"10\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"11\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"使用 \"),\n      _c(\"code\", [_vm._v(\"Nginx search\")]),\n      _vm._v(\n        \" 命令，我们可以得到一个类似于 Nginx Hub 网页版搜索的镜像列表结果，其中的信息与网页版也是类似的。通过这种方式我们可以在不方便访问 Web 的环境下搜索镜像，对于控制台爱好者来说也是一种不错的选择。\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"管理镜像\" } }, [\n      _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#管理镜像\" } }, [\n        _vm._v(\"#\")\n      ]),\n      _vm._v(\" 管理镜像\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"除了之前我们所提到的 \"),\n      _c(\"code\", [_vm._v(\"Nginx images\")]),\n      _vm._v(\n        \" 可以列出本地 Nginx 中的所有镜像外，如果我们要获得镜像更详细的信息，我们可以通过 \"\n      ),\n      _c(\"code\", [_vm._v(\"Nginx inspect\")]),\n      _vm._v(\" 这个命令。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            '$ sudo Nginx inspect redis:3.2\\n[\\n    {\\n        \"Id\": \"sha256:2fef532eadb328740479f93b4a1b7595d412b9105ca8face42d3245485c39ddc\",\\n        \"RepoTags\": [\\n            \"redis:3.2\"\\n        ],\\n        \"RepoDigests\": [\\n            \"redis@sha256:745bdd82bad441a666ee4c23adb7a4c8fac4b564a1c7ac4454aa81e91057d977\"\\n        ],\\n## ......\\n    }\\n]\\n\\n'\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"7\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"8\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"9\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"10\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"11\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"12\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"13\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"14\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"在 \"),\n      _c(\"code\", [_vm._v(\"Nginx inspect\")]),\n      _vm._v(\n        \" 的结果中我们可以看到关于镜像相当完备的信息，由于条目分类比较多，这里我就不一一罗列展开了。\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"除了能够查看镜像的信息外，\"),\n      _c(\"code\", [_vm._v(\"Nginx inspect\")]),\n      _vm._v(\n        \" 还能查看容器等之前我们所提到的 Nginx 对象的信息，而传参的方式除了传递镜像或容器的名称外，还可以传入镜像 ID 或容器 ID。\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"$ sudo Nginx inspect redis:4.0\\n$ sudo Nginx inspect 2fef532e\\n\\n\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"参数识别\" } }, [\n      _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#参数识别\" } }, [\n        _vm._v(\"#\")\n      ]),\n      _vm._v(\" 参数识别\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"细心的读者在这里一定发现了一个细节，之前我们所谈到镜像 ID 是 64 个字符，而 \"\n      ),\n      _c(\"code\", [_vm._v(\"Nginx images\")]),\n      _vm._v(\n        \" 命令里的缩写也有 12 个字符，为什么我这里展示的操作命令里只填写了 8 个字符呢？\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"不论我们是通过镜像名还是镜像 ID 传递到 \"),\n      _c(\"code\", [_vm._v(\"Nginx inspect\")]),\n      _vm._v(\n        \" 或者其他类似的命令 ( 需要指定 Nginx 对象的命令 ) 里，Nginx 都会根据我们传入的内容去寻找与之匹配的内容，只要我们所给出的内容能够找出唯一的镜像，那么 Nginx 就会对这个镜像执行给定的操作。反之，如果找不到唯一的镜像，那么操作不会进行，Nginx 也会显示错误。\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"REPOSITORY            TAG                 IMAGE ID            CREATED             SIZE\\nphp                   7-fpm               f214b5c48a25        11 days ago         368MB\\nubuntu                latest              cd6d8154f1e1        13 days ago         84.1MB\\nredis                 3.2                 2fef532eadb3        13 days ago         76MB\\nredis                 4.0                 e1a73233e3be        13 days ago         83.4MB\\nopenresty/openresty   1.13.6.2-alpine     08d5c926e4b6        3 months ago        49.3MB\\ncogset/cron           latest              c01d5ac6fc8a        16 months ago       125MB\\n\\n\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"7\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"8\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [_vm._v(\"$ sudo Nginx inspect 2\\n\\n\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\"$ sudo Nginx inspect c\\n[]\\nError: No such object: c\\n\\n\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"删除镜像\" } }, [\n      _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#删除镜像\" } }, [\n        _vm._v(\"#\")\n      ]),\n      _vm._v(\" 删除镜像\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"删除镜像的命令是 \"),\n      _c(\"code\", [_vm._v(\"Nginx rmi\")]),\n      _vm._v(\"，参数是镜像的名称或 ID。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"$ sudo Nginx rmi ubuntu:latest\\nUntagged: ubuntu:latest\\nUntagged: ubuntu@sha256:de774a3145f7ca4f0bd144c7d4ffb2931e06634f11529653b23eba85aef8e378\\nDeleted: sha256:cd6d8154f1e16e38493c3c2798977c5e142be5e5d41403ca89883840c6d51762\\nDeleted: sha256:2416e906f135eea2d08b4a8a8ae539328482eacb6cf39100f7c8f99e98a78d84\\nDeleted: sha256:7f8291c73f3ecc4dc9317076ad01a567dd44510e789242368cd061c709e0e36d\\nDeleted: sha256:4b3d88bd6e729deea28b2390d1ddfdbfa3db603160a1129f06f85f26e7bcf4a2\\nDeleted: sha256:f51700a4e396a235cee37249ffc260cdbeb33268225eb8f7345970f5ae309312\\nDeleted: sha256:a30b835850bfd4c7e9495edf7085cedfad918219227c7157ff71e8afe2661f63\\n\\n\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"7\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"8\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"9\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"10\")]),\n        _c(\"br\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"code\", [_vm._v(\"Nginx rmi\")]),\n      _vm._v(\n        \" 命令也支持同时删除多个镜像，只需要通过空格传递多个镜像 ID 或镜像名即可。\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language- line-numbers-mode\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"$ sudo Nginx rmi redis:3.2 redis:4.0\\nUntagged: redis:3.2\\nUntagged: redis@sha256:745bdd82bad441a666ee4c23adb7a4c8fac4b564a1c7ac4454aa81e91057d977\\nDeleted: sha256:2fef532eadb328740479f93b4a1b7595d412b9105ca8face42d3245485c39ddc\\n## ......\\nUntagged: redis:4.0\\nUntagged: redis@sha256:b77926b30ca2f126431e4c2055efcf2891ebd4b4c4a86a53cf85ec3d4c98a4c9\\nDeleted: sha256:e1a73233e3beffea70442fc2cfae2c2bab0f657c3eebb3bdec1e84b6cc778b75\\n## ......\\n\\n\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"line-numbers-wrapper\" }, [\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"1\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"2\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"3\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"4\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"5\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"6\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"7\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"8\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"9\")]),\n        _c(\"br\"),\n        _c(\"span\", { staticClass: \"line-number\" }, [_vm._v(\"10\")]),\n        _c(\"br\")\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}